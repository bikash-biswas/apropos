<?php

	class SQLQuery{
		const USER_VALIDATION_SQL= "SELECT COUNT(1) FROM USERS WHERE USERNAME LIKE ? AND PASSWORD LIKE ?";// Valid
		const USER_ADMIN_COMPANY_LIST_SQL="SELECT COMPANIES.ID AS CID,COMPANIES.COMPANY AS COMPANY,COMPANIES.COMPANY_SHORT AS COMPANY_SHORT,UNITS.ID AS UID, UNITS.UNIT AS UNIT, UNITS.UNIT_SHORT AS UNIT_SHORT FROM COMPANIES LEFT JOIN UNITS on (COMPANIES.id = UNITS.COMPANY_ID) UNION SELECT COMPANIES.ID AS CID,COMPANIES.COMPANY AS COMPANY,COMPANIES.COMPANY_SHORT AS COMPANY_SHORT,UNITS.ID AS UID, UNITS.UNIT AS UNIT, UNITS.UNIT_SHORT AS UNIT_SHORT FROM COMPANIES RIGHT JOIN UNITS on (COMPANIES.id = UNITS.COMPANY_ID)"; //valid
		const USER_OPERATION_SQL="SELECT distinct(O.OPERATION) AS OPERATION,O.VALIDFOR AS VALIDFOR FROM USERS U, ROLES R,ROLEOPMAPPING RM, OPERATIONS O WHERE U.ROLE_ID = R.ID AND R.ID = RM.ROLE_ID AND RM.OPERATION_ID = O.ID AND U.USERNAME like ?";//valid		
		const COMPANY_SQL= "SELECT ID,COMPANY_SHORT,COMPANY FROM COMPANIES";
		const COMPANY_SELECT_SQL= "SELECT ID,COMPANY_SHORT, COMPANY FROM COMPANIES WHERE ID LIKE ?";
		const UNIT_SQL= "SELECT U.ID, U.UNIT FROM UNITS U, COMPANIES  C WHERE U.COMPANY_ID = C.ID AND C.ID LIKE  ?";
		const USER_INFO_SQL= "SELECT USERS.FIRSTNAME AS FIRSTNAME, USERS.LASTNAME AS LASTNAME, USERS.ID AS ID, USERS.EMAIL AS EMAIL, ROLES.ROLE AS ROLE,COMPANIES.ID AS CID, COMPANIES.COMPANY AS COMPANY,UNITS.ID AS UID, UNITS.UNIT AS UNIT FROM USERS,ROLES,COMPANIES,UNITS WHERE USERS.ROLE_ID=ROLES.ID AND USERS.UNIT_ID=UNITS.ID AND COMPANIES.ID=UNITS.COMPANY_ID AND USERS.USERNAME = ?";
		const UNIT_DESC_SQL="SELECT UNIT FROM UNITS WHERE ID = ?";
		const USER_ACTIONS_SQL="SELECT o.OPERATION,o.VALIDFOR FROM roles r, operations o, roleopmapping rm WHERE r.id = rm.ROLE_ID AND rm.OPERATION_ID = o.id AND r.id = ?";
		const USER_COMPANY_UNIT_SQL="SELECT u.ID UID,c.ID CID, u.UNIT,c.COMPANY,u.UNIT_SHORT,c.COMPANY_SHORT FROM UNITS u,COMPANIES c WHERE c.ID = u.COMPANY_ID AND u.ID = ?";
		const COMPANY_ADD ="INSERT INTO COMPANIES (COMPANY_SHORT,COMPANY) VALUES (?,?)";
		const COMPANY_DELETE ="DELETE FROM  COMPANIES WHERE ID = ?";
		const COMPANY_UPDATE ="UPDATE COMPANIES SET COMPANY_SHORT = ? , COMPANY = ? WHERE ID = ?";
		const UNIT_ADD ="INSERT INTO UNITS (COMPANY_ID,UNIT,UNIT_SHORT) VALUES (?,?,?)";
		const UNIT_DELETE ="DELETE FROM  UNITS WHERE ID = ?";
		const UNIT_UPDATE ="UPDATE UNITS SET COMPANY_ID = ?, UNIT = ?, UNIT_SHORT = ?  WHERE ID = ?";
		const USER_COMPANY_LIST_SQL="SELECT COMPANIES.ID AS CID,COMPANIES.COMPANY AS COMPANY,COMPANIES.COMPANY_SHORT AS COMPANY_SHORT,UNITS.ID AS UID, UNITS.UNIT AS UNIT, UNITS.UNIT_SHORT AS UNIT_SHORT FROM USERS,COMPANIES ,UNITS WHERE UNITS.COMPANY_ID = COMPANIES.ID AND USERS.COMPANY_ID = COMPANIES.ID AND USERS.UNIT_ID = UNITS.ID  AND USERS.USERNAME = ?";
		const ROLE_ADD ="INSERT INTO ROLES (ROLE,DESCRIPTION) VALUES (?,?)";
		const ROLE_UPDATE ="UPDATE ROLES SET ROLE = ?, DESCRIPTION =? WHERE ID = ?";
		const ROLE_DELETE ="DELETE FROM  ROLES WHERE ID = ?";
		const ROLE_LIST ="SELECT ID,ROLE,DESCRIPTION FROM ROLES ORDER BY ROLE";
		const ROLE_FIND ="SELECT ID,ROLE,DESCRIPTION FROM ROLES WHERE ID = ?";
		const OPERATION_ADD ="INSERT INTO OPERATIONS (OPERATION,VALIDFOR,DESCRIPTION) VALUES (?,?,?)";
		const OPERATION_UPDATE ="UPDATE OPERATIONS SET OPERATION = ?, VALIDFOR =?,DESCRIPTION=?  WHERE ID = ?";
		const OPERATION_DELETE ="DELETE FROM OPERATIONS WHERE ID = ?";
		const OPERATION_LIST ="SELECT ID,OPERATION,VALIDFOR,DESCRIPTION FROM OPERATIONS ORDER BY OPERATION";
		const OPERATION_FIND ="SELECT ID,OPERATION,VALIDFOR,DESCRIPTION FROM OPERATIONS WHERE ID = ?";
		const ROLE_OPERATION_FIND="SELECT O.ID, O.OPERATION,O.VALIDFOR,O.DESCRIPTION,CASE WHEN MAP.OID IS NULL THEN 'false' ELSE 'true' END AS STATUS FROM OPERATIONS O LEFT OUTER JOIN (SELECT RM.OPERATION_ID AS OID FROM ROLES R,ROLEOPMAPPING RM WHERE RM.ROLE_ID = R.ID AND R.ID=?) AS MAP ON MAP.OID= O.ID ";
		const USER_ROLE_OPERATION_FIND="SELECT O.ID, O.OPERATION,O.VALIDFOR,O.DESCRIPTION,CASE WHEN MAP.OID IS NULL THEN 'false' ELSE 'true' END AS STATUS FROM OPERATIONS O LEFT OUTER JOIN (SELECT RM.OPERATION_ID AS OID FROM USERS U,ROLES R,ROLEOPMAPPING RM WHERE U.ROLE_ID=R.ID AND RM.ROLE_ID = R.ID AND U.ID= ? ) AS MAP ON MAP.OID= O.ID ";
		const ROLEOPMAPPING_ADD="INSERT INTO ROLEOPMAPPING (ROLE_ID,OPERATION_ID) VALUES (?,?)";
		const ROLEOPMAPPING_DELETE="DELETE FROM ROLEOPMAPPING  WHERE ROLE_ID =?";
		const USERROLE_UNSET="UPDATE USERS SET ROLE_ID=null WHERE ROLE_ID = ?";
		
	}
?>